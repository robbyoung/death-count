// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Option Picker Component can render an option picker with a selected item 1`] = `
<View
  style={
    Object {
      "marginLeft": "5%",
      "marginRight": "5%",
      "width": "90%",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 18,
        "marginBottom": 5,
        "marginTop": 5,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderRadius": 5,
        "width": "100%",
      }
    }
  >
    <View>
      <RCTPicker
        items={
          Array [
            Object {
              "label": "key 1",
              "textColor": undefined,
              "value": "value 1",
            },
            Object {
              "label": "key 2",
              "textColor": undefined,
              "value": "value 2",
            },
          ]
        }
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Option Picker Component can render an option picker with nothing selected 1`] = `
<View
  style={
    Object {
      "marginLeft": "5%",
      "marginRight": "5%",
      "width": "90%",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 18,
        "marginBottom": 5,
        "marginTop": 5,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderRadius": 5,
        "width": "100%",
      }
    }
  >
    <View>
      <RCTPicker
        items={
          Array [
            Object {
              "label": "None Selected",
              "textColor": undefined,
              "value": undefined,
            },
            Object {
              "label": "key 1",
              "textColor": undefined,
              "value": "value 1",
            },
            Object {
              "label": "key 2",
              "textColor": undefined,
              "value": "value 2",
            },
          ]
        }
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
